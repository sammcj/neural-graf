// Code generated by MockGen. DO NOT EDIT.
// Source: internal/graph/dgraph/dgraph_client.go

// Package mock_dgraph is a generated GoMock package.
package mock_dgraph

import (
	context "context"
	reflect "reflect"

	api "github.com/dgraph-io/dgo/v2/protos/api"
	gomock "github.com/golang/mock/gomock"
	dgraph "github.com/sammcj/mcp-graph/internal/graph/dgraph"
)

// MockDgraphClient is a mock of DgraphClient interface.
type MockDgraphClient struct {
	ctrl     *gomock.Controller
	recorder *MockDgraphClientMockRecorder
}

// MockDgraphClientMockRecorder is the mock recorder for MockDgraphClient.
type MockDgraphClientMockRecorder struct {
	mock *MockDgraphClient
}

// NewMockDgraphClient creates a new mock instance.
func NewMockDgraphClient(ctrl *gomock.Controller) *MockDgraphClient {
	mock := &MockDgraphClient{ctrl: ctrl}
	mock.recorder = &MockDgraphClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDgraphClient) EXPECT() *MockDgraphClientMockRecorder {
	return m.recorder
}

// Alter mocks base method.
func (m *MockDgraphClient) Alter(ctx context.Context, op *api.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Alter", ctx, op)
	ret0, _ := ret[0].(error)
	return ret0
}

// Alter indicates an expected call of Alter.
func (mr *MockDgraphClientMockRecorder) Alter(ctx, op interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Alter", reflect.TypeOf((*MockDgraphClient)(nil).Alter), ctx, op)
}

// NewReadOnlyTxn mocks base method.
func (m *MockDgraphClient) NewReadOnlyTxn() dgraph.DgraphTxn {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewReadOnlyTxn")
	ret0, _ := ret[0].(dgraph.DgraphTxn)
	return ret0
}

// NewReadOnlyTxn indicates an expected call of NewReadOnlyTxn.
func (mr *MockDgraphClientMockRecorder) NewReadOnlyTxn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewReadOnlyTxn", reflect.TypeOf((*MockDgraphClient)(nil).NewReadOnlyTxn))
}

// NewTxn mocks base method.
func (m *MockDgraphClient) NewTxn() dgraph.DgraphTxn {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewTxn")
	ret0, _ := ret[0].(dgraph.DgraphTxn)
	return ret0
}

// NewTxn indicates an expected call of NewTxn.
func (mr *MockDgraphClientMockRecorder) NewTxn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewTxn", reflect.TypeOf((*MockDgraphClient)(nil).NewTxn))
}
